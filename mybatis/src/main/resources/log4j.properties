log4j.rootLogger=info,rollingFile,stdout
log4j.logger.xyz.wecloud.mybatis.mapper=debug
# RollingFile 回滚文件: 当满足一定条件(如文件达到了指定的大小，或达到了指定的时间)后，就重命名原日志文件进行归档，并生成新的日志文件用于log写入
log4j.appender.rollingFile=org.apache.log4j.DailyRollingFileAppender
# 回滚文件时间戳
log4j.appender.rollingFile.DatePattern='.'yyyy-MM-dd
# 回滚文件日志名
log4j.appender.rollingFile.File=logs/mybatis.log
# 回滚文件日志布局格式
log4j.appender.rollingFile.layout=org.apache.log4j.PatternLayout
# 日志信息的格式
# %d{yyyy-MM-dd HH:mm:ss}:  时间格式;
# %t:                       当前线程名;
# %-5p:                     日志级别;
# %l:                       输出日志事件的发生位置，相当于%c.%M(%F:%L)的组合，包括类全名、方法、文件名以及在代码中的行数。
# %m:                       日志信息；
# %n:                       换行
log4j.appender.rollingFile.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} [%t] %-5p [%c] - %m%n
log4j.appender.rollingFile.Append=true
# 系统控制台输出
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} [%t] %-5p [%c] - %m%n